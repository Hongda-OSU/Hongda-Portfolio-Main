{"version":3,"file":"static/js/161.2682e71a.chunk.js","mappings":"sOAOMA,EAAc,SAACC,GAAD,OAClB,iCACE,cAAGC,KAAMD,EAAKE,KAAMC,UAAU,QAA9B,UACE,gBAAKC,IAAG,UAAKC,IAAL,OAA8BL,EAAKM,OAASC,IAAKP,EAAKQ,WAEhE,gBAAKL,UAAU,cAAf,UACE,uBAAIH,EAAKS,WANK,EAWdC,EAAc,SAACV,GAAD,OAClB,iCACE,cAAGC,KAAMD,EAAKE,KAAMC,UAAU,QAAQQ,OAAO,SAASC,IAAI,sBAA1D,UACE,SAAC,IAAD,CAAaC,IAAKb,EAAKc,MAAOC,SAhBf,KAgBuCC,MAAM,OAAOC,OAAQC,OAAOC,WAAa,IAAM,OAAS,aAEhH,gBAAKhB,UAAU,cAAf,UACE,uBAAIH,EAAKS,WANK,EAmCpB,EAxBa,SAAC,GAAD,IAAGT,EAAH,EAAGA,KAAH,OACX,gBAAKG,UAAU,iBAAf,UACE,qBAASA,UAAU,YAAnB,WACE,+BACE,yBAAI,cAAGF,KAAMD,EAAKE,KAAMS,OAAO,SAASC,IAAI,sBAAxC,SAA+DZ,EAAKQ,WACxE,kBAAML,UAAU,YAAhB,UAA6BiB,IAAMpB,EAAKqB,WAAWC,OAAO,cAA1D,MAAoG,IAAxBtB,EAAKuB,QAAQC,OAAe,UAAYJ,IAAMpB,EAAKuB,SAASD,OAAO,oBAEzH,IAAtBtB,EAAKM,MAAMkB,OAAed,EAAYV,GAAQD,EAAYC,OAPrD,ECuEb,EApGa,CACX,CACEQ,MAAO,QACPiB,SAAU,kDACVnB,MAAO,GACPJ,KAAM,mCACNY,MAAO,8CACPO,UAAW,YACXE,QAAS,YACTd,KACE,mLAEJ,CACED,MAAO,uBACPiB,SAAU,6BACVnB,MAAO,GACPJ,KAAM,yDACNY,MAAO,oDACPO,UAAW,YACXE,QAAS,YACTd,KACE,gOAGJ,CACED,MAAO,iBACPiB,SAAU,yCACVnB,MAAO,GACPJ,KAAM,uDACNY,MAAO,oDACPO,UAAW,aACXE,QAAS,aACTd,KACE,sLAEJ,CACED,MAAO,yBACPiB,SAAU,yCACVnB,MAAO,GACPJ,KAAM,uDACNY,MAAO,8CACPO,UAAW,aACXE,QAAS,aACTd,KACE,yQAGJ,CACED,MAAO,8BACPiB,SAAU,yCACVnB,MAAO,GACPJ,KAAM,+DACNY,MAAO,8CACPO,UAAW,aACXE,QAAS,aACTd,KACE,4LAEJ,CACED,MAAO,6BACPiB,SAAU,mBACVvB,KAAM,0CACNI,MAAO,iCACPe,UAAW,aACXE,QAAS,aACTd,KACE,mMAEJ,CACED,MAAO,qBACPiB,SAAU,gCACVvB,KAAM,iDACNI,MAAO,+BACPe,UAAW,aACXE,QAAS,aACTd,KACE,6HAEJ,CACED,MAAO,gCACPiB,SAAU,4CACVvB,KAAM,yDACNI,MAAO,uCACPe,UAAW,aACXE,QAAS,GACTd,KACE,0JAEJ,CACED,MAAO,qBACPiB,SAAU,gCACVvB,KAAM,2DACNI,MAAO,0BACPe,UAAW,aACXE,QAAS,GACTd,KACE,0DClEN,EAtBiB,kBACf,SAACiB,EAAA,EAAD,CACElB,MAAM,WACNmB,YAAY,qCAFd,UAIE,qBAASxB,UAAU,OAAOyB,GAAG,WAA7B,WACE,6BACE,iBAAKzB,UAAU,QAAf,WACE,eAAI,cAAY,UAAhB,UAA0B,SAAC,KAAD,CAAM0B,GAAG,YAAT,yBAC1B,sFAGH7B,EAAAA,KAAS,SAAC8B,GAAD,OACR,SAAC,EAAD,CACE9B,KAAM8B,GACDA,EAAQtB,MAHP,QAZC,C","sources":["components/Projects/Cell.js","data/projects.js","pages/Projects.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport ReactPlayer from 'react-player/lazy';\n\nconst videoControl = true;\n\nconst handleImage = (data) => (\n  <>\n    <a href={data.link} className=\"image\">\n      <img src={`${process.env.PUBLIC_URL}${data.image}`} alt={data.title} />\n    </a>\n    <div className=\"description\">\n      <p>{data.desc}</p>\n    </div>\n  </>\n);\n\nconst handleVideo = (data) => (\n  <>\n    <a href={data.link} className=\"image\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <ReactPlayer url={data.video} controls={videoControl} width=\"100%\" height={window.innerWidth < 500 ? '100%' : '480px'} />\n    </a>\n    <div className=\"description\">\n      <p>{data.desc}</p>\n    </div>\n  </>\n);\n\nconst Cell = ({ data }) => (\n  <div className=\"cell-container\">\n    <article className=\"mini-post\">\n      <header>\n        <h3><a href={data.link} target=\"_blank\" rel=\"noopener noreferrer\">{data.title}</a></h3>\n        <time className=\"published\">{dayjs(data.dateBegin).format('MMMM, YYYY')} - {data.dateEnd.length === 0 ? 'Present' : dayjs(data.dateEnd).format('MMMM, YYYY')}</time>\n      </header>\n      { data.image.length === 0 ? handleVideo(data) : handleImage(data)}\n    </article>\n  </div>\n);\n\nCell.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string,\n    video: PropTypes.string,\n    image: PropTypes.string.isRequired,\n    dateBegin: PropTypes.string.isRequired,\n    dateEnd: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Cell;\n","const data = [\n  {\n    title: 'Karma',\n    subtitle: 'CSE 5912 Capstone - Game Design and Development',\n    image: '',\n    link: 'https://polygamers.itch.io/karma',\n    video: 'https://www.youtube.com/watch?v=uDoa5-KkLkE',\n    dateBegin: '2022-1-05',\n    dateEnd: '2022-5-13',\n    desc:\n      'Karma is a First-Person Shooting game that gives players an awesome gameplay experience while exploring different maps, skill trees, and customizable elements in RPG crawlers.',\n  },\n  {\n    title: 'Medical Image Helper',\n    subtitle: 'CSE 5546 - Virtual Reality',\n    image: '',\n    link: 'https://github.com/Hongda-OSU/CSE-5546-AR-Eye-Tracking',\n    video: 'https://www.youtube.com/watch?v=wyJaXIFSe5I&t=88s',\n    dateBegin: '2022-4-25',\n    dateEnd: '2022-5-08',\n    desc:\n      'A simple medical image helper for tracking pathologist\\'s eye-movement. We use Dlib + CV2 to track the gaze direction and detect eye blink. '\n      + 'And we use Unity to shift the image toward the gaze direction when blink happens.',\n  },\n  {\n    title: 'Endless Runner',\n    subtitle: 'CSE 3541 - Computer Game and Animation',\n    image: '',\n    link: 'https://github.com/Hongda-OSU/CSE3541-Endless-Runner',\n    video: 'https://www.youtube.com/watch?v=J23FXJWjgFQ&t=36s',\n    dateBegin: '2021-11-20',\n    dateEnd: '2021-12-05',\n    desc:\n      'Endless Runner is a running game with cool animation and infinite level generation. The player will try to run as far as he/she can while collecting items and avoiding obstacles.',\n  },\n  {\n    title: 'AI Agents and Steering',\n    subtitle: 'CSE 3541 - Computer Game and Animation',\n    image: '',\n    link: 'https://github.com/Hongda-OSU/CSE3541-Lab5-AI-Agents',\n    video: 'https://www.youtube.com/watch?v=9Ru5QHfA88Q',\n    dateBegin: '2021-10-15',\n    dateEnd: '2021-10-25',\n    desc:\n      'Learned about behavior-based animation techniques by implementing algorithms such as spatial agent vision and steering behavior. '\n      + 'The predator (blue) is aimed to catch the prey and the prey (red) is aimed to reach the goal (red square) while avoid being catched.',\n  },\n  {\n    title: 'The Legend of Zelda (Clone)',\n    subtitle: 'CSE 3902 Project - Interactive Systems',\n    image: '',\n    link: 'https://github.com/Hongda-OSU/CSE-3902-Team-JellyLake-Zelda-',\n    video: 'https://www.youtube.com/watch?v=qvB6drBRjdc',\n    dateBegin: '2021-08-31',\n    dateEnd: '2022-12-13',\n    desc:\n      'Restored the complete Level 1 dungeon of classic game Legend of Zelda 1986, including 10 player abilities, 15 enemies and 25 items. Implemented procedural dungeon generation algorithm.',\n  },\n  {\n    title: 'CraftMine (Mincraft Clone)',\n    subtitle: 'Personal Project',\n    link: 'https://github.com/Hongda-OSU/CraftMine',\n    image: '/images/projects/CraftMine.gif',\n    dateBegin: '2021-10-20',\n    dateEnd: '2022-01-20',\n    desc:\n      'Learned to build a voxel-based world like Minecraft and the application of Perlin Noise in terrain generation. Achieved the basic player interactions including navigation and building system.',\n  },\n  {\n    title: 'L-System Generator',\n    subtitle: 'CSE 5542 - Realtime Rendering',\n    link: 'https://github.com/Hongda-OSU/CSE5542-L-System',\n    image: '/images/projects/LSystem.gif',\n    dateBegin: '2022-09-23',\n    dateEnd: '2022-10-15',\n    desc:\n      'Created an OpenGL program that produces growing 2D plant models based on L-system (Lindenmayer system) growth techniques.',\n  },\n  {\n    title: 'Buckeye Schedule (Developing)',\n    subtitle: 'CSE 5236 - Mobile Application Development',\n    link: 'https://github.com/Hongda-OSU/CSE5236-Buckeye-Schedule',\n    image: '/images/projects/BuckeyeSchedule.gif',\n    dateBegin: '2022-09-03',\n    dateEnd: '',\n    desc:\n      'Buckeye Schedule is an Android application aimed on helping college students to remember their important schedules. (The project is under development)',\n  },\n  {\n    title: 'Data Visualization',\n    subtitle: 'CSE 5544 - Data Visualization',\n    link: 'https://github.com/Hongda-OSU/CSE5544-Data-Visualization',\n    image: '/images/projects/D3.gif',\n    dateBegin: '2022-09-03',\n    dateEnd: '',\n    desc:\n      'Stock and Energy data visualized using D3 and Pandas.',\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Cell from '../components/Projects/Cell';\nimport data from '../data/projects';\n\nconst Projects = () => (\n  <Main\n    title=\"Projects\"\n    description=\"Learn about Hongda Lin's projects.\"\n  >\n    <article className=\"post\" id=\"projects\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"/projects\">Projects</Link></h2>\n          <p>A selection of my personal projects that I&apos;m proud of</p>\n        </div>\n      </header>\n      {data.map((project) => (\n        <Cell\n          data={project}\n          key={project.title}\n        />\n      ))}\n    </article>\n  </Main>\n);\n\nexport default Projects;\n"],"names":["handleImage","data","href","link","className","src","process","image","alt","title","desc","handleVideo","target","rel","url","video","controls","width","height","window","innerWidth","dayjs","dateBegin","format","dateEnd","length","subtitle","Main","description","id","to","project"],"sourceRoot":""}